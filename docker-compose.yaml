services:
  postgres:
    image: postgres:16
    container_name: movietracker-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: movietracker-api
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=movietracker;Username=postgres;Password=postgres
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./MovieTracker.Frontend
      dockerfile: Dockerfile
    container_name: movietracker-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - api
    environment:
      - REACT_APP_API_URL=http://localhost:5000

volumes:
  postgres_data:

